import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

# –í–∞—à —Ç–æ–∫–µ–Ω –æ—Ç BotFather
TOKEN = "7858668499:AAEMcrJsMqKwvpLzs86SN80bJIRgUSl7w5A"
bot = telebot.TeleBot(TOKEN)

# –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
categories = [
    "–õ–∏—á–Ω–æ–µ üè†",
    "–†–∞–±–æ—Ç–∞/–£—á–µ–±–∞ üíºüìö",
    "–ó–¥–æ—Ä–æ–≤—å–µ üèãÔ∏è‚Äç‚ôÄÔ∏èüíä",
    "–í–∞–∂–Ω—ã–µ –¥–∞—Ç—ã üìÖüéâ",
    "–§–∏–Ω–∞–Ω—Å—ã üí∞üìà"
]

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
reminders = {category: {} for category in categories}  # –°–ª–æ–≤–∞—Ä—å {–∫–∞—Ç–µ–≥–æ—Ä–∏—è: {user_id: [–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è]}}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–°–ø–∏—Å–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", callback_data="list_reminders"))
    markup.add(InlineKeyboardButton("–°–æ–∑–¥–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", callback_data="create_reminder"))
    return markup

# –ú–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π
def category_menu(callback_prefix):
    markup = InlineKeyboardMarkup()
    for category in categories:
        markup.add(InlineKeyboardButton(category, callback_data=f"{callback_prefix}:{category}"))
    markup.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu"))
    return markup

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π. –í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ.",
        reply_markup=main_menu()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    if call.data == "list_reminders":
        bot.edit_message_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:",
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            reply_markup=category_menu("view_category")
        )
    elif call.data.startswith("view_category:"):
        category = call.data.split(":")[1]
        user_id = call.from_user.id
        if category == "–í—Å–µ":
            all_reminders = "\n\n".join(
                f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {cat}\n" + "\n".join(f"{i+1}. {rem}" for i, rem in enumerate(reminders[cat].get(user_id, [])))
                for cat in categories if user_id in reminders[cat]
            ) or "–£ –≤–∞—Å –Ω–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π."
            bot.edit_message_text(
                all_reminders,
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                reply_markup=category_menu("view_category")
            )
        else:
            category_reminders = "\n".join(
                [f"{i+1}. {rem}" for i, rem in enumerate(reminders[category].get(user_id, []))]
            ) or "–ù–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏."
            markup = InlineKeyboardMarkup()
            for i, reminder in enumerate(reminders[category].get(user_id, [])):
                markup.add(InlineKeyboardButton(f"–£–¥–∞–ª–∏—Ç—å {i+1}", callback_data=f"delete_reminder:{category}:{i}"))
            markup.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="list_reminders"))
            markup.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu"))
            bot.edit_message_text(
                f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}':\n\n{category_reminders}",
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                reply_markup=markup
            )
    elif call.data.startswith("delete_reminder:"):
        category, index = call.data.split(":")[1], int(call.data.split(":")[2])
        user_id = call.from_user.id
        try:
            del reminders[category][user_id][index]
            bot.edit_message_text(
                f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}'.",
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                reply_markup=main_menu()
            )
        except IndexError:
            bot.send_message(
                call.message.chat.id,
                "–û—à–∏–±–∫–∞: –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.",
                reply_markup=main_menu()
            )
    elif call.data == "create_reminder":
        bot.edit_message_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –Ω–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:",
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            reply_markup=category_menu("create_in_category")
        )
    elif call.data.startswith("create_in_category:"):
        category = call.data.split(":")[1]
        msg = bot.edit_message_text(
            f"–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}':",
            chat_id=call.message.chat.id,
            message_id=call.message.message_id
        )
        bot.register_next_step_handler(msg, save_reminder, category)
    elif call.data == "main_menu":
        bot.edit_message_text(
            "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            reply_markup=main_menu()
        )

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
def save_reminder(message, category):
    user_id = message.from_user.id
    reminder_text = message.text

    if user_id not in reminders[category]:
        reminders[category][user_id] = []
    reminders[category][user_id].append(reminder_text)

    bot.send_message(
        message.chat.id,
        f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ '{reminder_text}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}'!",
        reply_markup=main_menu()
    )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()